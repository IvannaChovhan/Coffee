# Generated by Django 3.1.4 on 2020-12-15 22:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameBuyer', models.CharField(error_messages={'invalid': 'Name is too long. Up to 50 symbols allowed', 'required': 'Name field is required'}, max_length=50)),
                ('phoneNumberBuyer', models.CharField(error_messages={'required': 'Phone number is required'}, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be in format: '+999999999'. Up to 15 digits allowed", regex='^\\+?1?\\d{9,15}$')])),
                ('emailBuyer', models.EmailField(error_messages={'invalid': 'E-mail field is incorrect', 'required': 'E-mail field is required'}, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='CoffeeProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('harvestYear', models.IntegerField(choices=[(1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020)], default=2020, error_messages={'invalid': 'Harvest year must be from 1984 to 2020', 'required': 'Harvest year is required'}, validators=[django.core.validators.MinValueValidator(1984), django.core.validators.MaxValueValidator(2020)])),
                ('aroma', models.FloatField(error_messages={'invalid': 'Aroma field must be from 0 to 10', 'required': 'Aroma field is required'}, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('aftertaste', models.FloatField(error_messages={'invalid': 'Aftertaste field must be from 0 to 10', 'required': 'Aftertaste field is required'}, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('flavor', models.FloatField(error_messages={'invalid': 'Flavor field must be from 0 to 10', 'required': 'Flavor field is required'}, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('color', models.CharField(error_messages={'invalid': 'Color is too long. Up to 20 symbols allowed', 'required': 'Color field is required'}, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CoffeeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameCoffeeType', models.CharField(error_messages={'invalid': 'Name is too long. Up to 50 symbols allowed', 'required': 'Name field is required'}, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameCountry', models.CharField(error_messages={'invalid': 'Name is too long. Up to 50 symbols allowed', 'required': 'Name field is required'}, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(error_messages={'invalid': 'Weight field must be positive float', 'required': 'Weight is required'}, validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=2, error_messages={'invalid': 'Price field must be positive float. Up to 20 digits allowed', 'required': 'Price is required'}, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('dateOrder', models.DateField()),
                ('purchase', models.CharField(choices=[('BUY', 'Закупка'), ('SELL', 'Продаж')], default='BUY', max_length=4)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.buyer')),
                ('coffeeProduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.coffeeproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameOwner', models.CharField(error_messages={'invalid': 'Name is too long. Up to 50 symbols allowed', 'required': 'Name field is required'}, max_length=50)),
                ('phoneNumberOwner', models.CharField(error_messages={'required': 'Phone number is required'}, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be in format: '+999999999'. Up to 15 digits allowed", regex='^\\+?1?\\d{9,15}$')])),
                ('emailOwner', models.EmailField(error_messages={'invalid': 'E-mail field is incorrect', 'required': 'E-mail field is required'}, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datePayment', models.DateField(error_messages={'required': 'Date is required'})),
                ('amount', models.DecimalField(decimal_places=2, error_messages={'invalid': 'Amount field must be positive float. Up to 20 digits allowed', 'required': 'Amount is required'}, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.order')),
            ],
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameFarm', models.CharField(error_messages={'invalid': 'Name is too long. Up to 50 symbols allowed', 'required': 'Name field is required'}, max_length=40)),
                ('countryFarm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.country')),
                ('ownerFarm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.owner')),
            ],
        ),
        migrations.AddField(
            model_name='coffeeproduct',
            name='coffeeType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.coffeetype'),
        ),
        migrations.AddField(
            model_name='coffeeproduct',
            name='farm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.farm'),
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(error_messages={'invalid': 'Text of certificate is too long. Up to 500 symbols allowed', 'required': 'Text of certificate is required'}, max_length=500)),
                ('dateOfExpire', models.DateField(error_messages={'required': 'Date of expire is required'})),
                ('disadvantages', models.TextField(error_messages={'invalid': 'Disadvantages field is too long. Up to 500 symbols allowed', 'required': 'Disadvantages field is required'}, max_length=500)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='coffee.coffeeproduct')),
            ],
        ),
    ]
